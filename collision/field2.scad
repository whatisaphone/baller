$fs = 120;

$vpt = [0,1080,480];
$vpr = [-34,0,0];
$vpf = 45;

foul_line = 6;
plain_color = [1,1,1,0.8];
out_color = [1,0.75,0.75,0.8];
eat_color = [0.5,0.75,1,0.8];

// home, first, second, third, rubber
color([1,1,1]) scale([1,-1,-1]) rotate([90,0,0]) linear_extrude(1) {
    polygon([[-30,30*2+300],[30,30*2+300],[30,30+300],[0,300],[-30,30+300]]);
    polygon([[552-36*2,852],[552-36,852+36],[552,852],[552-36,852-36]]);
    polygon([[0,1404+36],[36,1404],[0,1404-36],[-36,1404]]);
    polygon([[-552+36*2,852],[-552+36,852+36],[-552,852],[-552+36,852-36]]);
    polygon([[-19,852],[19,852],[19,9+852],[-19,9+852]]);
}

// foul lines
color([1,1,1,0.5]) scale([1,-1,-1]) rotate([90,0,0]) linear_extrude(1) {
    polygon([[0,300],[-5000,300+5000],[-5000,300+5000+foul_line],[0,300+foul_line]]);
    polygon([[0,300],[5000,300+5000],[5000,300+5000+foul_line],[0,300+foul_line]]);
}

scale([0.1,0.1,-0.1]) translate([-23200,0,0]) {
    color(out_color) polyhedron([[9680,0,11550],[14460,0,5630],[9680,3350,11550],[14460,3350,5630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9680,0,11550],[12300,0,13130],[9680,3350,11550],[12300,3350,13130]], [[0,1,3,2]]);
    color(out_color) polyhedron([[14460,0,5630],[16080,0,7210],[14460,3350,5630],[16080,3350,7210]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12300,0,13130],[16080,0,7210],[12300,3350,13130],[16080,3350,7210]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9680,3350,11550],[12300,3350,13130],[14460,3350,5630],[16080,3350,7210]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13860,0,10650],[14060,0,10650],[13860,10000,10650],[14060,10000,10650]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13860,0,10650],[13860,0,10950],[13860,10000,10650],[13860,10000,10950]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[14060,0,10650],[14060,0,10950],[14060,10000,10650],[14060,10000,10950]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13860,0,10950],[14060,0,10950],[13860,10000,10950],[14060,10000,10950]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13860,10000,10650],[13860,10000,10950],[14060,10000,10650],[14060,10000,10950]], [[0,1,3,2]]);
    color(out_color) polyhedron([[3000,0,34530],[12320,0,24820],[3000,20000,34530],[12320,20000,24820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[3000,0,34530],[3000,0,35530],[3000,20000,34530],[3000,20000,35530]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12320,0,24820],[12320,0,25820],[12320,20000,24820],[12320,20000,25820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[3000,0,35530],[12320,0,25820],[3000,20000,35530],[12320,20000,25820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[3000,20000,34530],[3000,20000,35530],[12320,20000,24820],[12320,20000,25820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12320,0,24820],[29040,0,41680],[12320,20000,24820],[29040,20000,41680]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12320,0,24820],[11320,0,25860],[12320,20000,24820],[11320,20000,25860]], [[0,1,3,2]]);
    color(out_color) polyhedron([[29040,0,41680],[28040,0,42720],[29040,20000,41680],[28040,20000,42720]], [[0,1,3,2]]);
    color(out_color) polyhedron([[11320,0,25860],[28040,0,42720],[11320,20000,25860],[28040,20000,42720]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12320,20000,24820],[11320,20000,25860],[29040,20000,41680],[28040,20000,42720]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18880,0,34890],[26580,0,27020],[18880,1700,34890],[26580,1700,27020]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18880,0,34890],[18880,0,34990],[18880,1700,34890],[18880,1700,34990]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26580,0,27020],[26580,0,27120],[26580,1700,27020],[26580,1700,27120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18880,0,34990],[26580,0,27120],[18880,1700,34990],[26580,1700,27120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18880,1700,34890],[18880,1700,34990],[26580,1700,27020],[26580,1700,27120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26580,0,27020],[40000,0,14295],[26580,20000,27020],[40000,20000,14295]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26580,0,27020],[26580,0,27120],[26580,20000,27020],[26580,20000,27120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[40000,0,14295],[40000,0,14340],[40000,20000,14295],[40000,20000,14340]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26580,0,27120],[40000,0,14340],[26580,20000,27120],[40000,20000,14340]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26580,20000,27020],[26580,20000,27120],[40000,20000,14295],[40000,20000,14340]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[17530,0,27150],[22660,0,32554],[17530,1300,27150],[22660,1300,32554]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[17530,0,27150],[16200,0,28732],[17530,1300,27150],[16200,1600,28732]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[22660,0,32554],[21000,0,34159],[22660,1300,32554],[21000,1600,34159]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[16200,0,28732],[21000,0,34159],[16200,1600,28732],[21000,1600,34159]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[17530,1300,27150],[16200,1600,28732],[22660,1300,32554],[21000,1600,34159]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13770,0,5030],[14460,0,5630],[13770,5,5030],[14460,5,5630]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13770,0,5030],[13670,0,5030],[13770,5,5030],[13670,5,5030]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[14460,0,5630],[14360,0,5630],[14460,5,5630],[14360,5,5630]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13670,0,5030],[14360,0,5630],[13670,5,5030],[14360,5,5630]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[13770,5,5030],[13670,5,5030],[14460,5,5630],[14360,5,5630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13960,0,4590],[18500,0,4590],[13960,5,4590],[18500,5,4590]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13960,0,4590],[13960,0,4690],[13960,5,4590],[13960,5,4690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18500,0,4590],[18500,0,4690],[18500,5,4590],[18500,5,4690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13960,0,4690],[18500,0,4690],[13960,5,4690],[18500,5,4690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13960,5,4590],[13960,5,4690],[18500,5,4590],[18500,5,4690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[19090,0,1880],[19190,0,1880],[19090,5,1880],[19190,5,1880]], [[0,1,3,2]]);
    color(out_color) polyhedron([[19090,0,1880],[18500,0,4560],[19090,5,1880],[18500,5,4560]], [[0,1,3,2]]);
    color(out_color) polyhedron([[19190,0,1880],[18600,0,4560],[19190,5,1880],[18600,5,4560]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18500,0,4560],[18600,0,4560],[18500,5,4560],[18600,5,4560]], [[0,1,3,2]]);
    color(out_color) polyhedron([[19090,5,1880],[18500,5,4560],[19190,5,1880],[18600,5,4560]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9540,0,16630],[9550,0,16630],[9540,5,16630],[9550,5,16630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9540,0,16630],[2670,0,35450],[9540,5,16630],[2670,5,35450]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9550,0,16630],[2670,0,35460],[9550,5,16630],[2670,5,35460]], [[0,1,3,2]]);
    color(out_color) polyhedron([[2670,0,35450],[2670,0,35460],[2670,5,35450],[2670,5,35460]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9540,5,16630],[2670,5,35450],[9550,5,16630],[2670,5,35460]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
}

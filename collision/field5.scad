$fs = 120;

$vpt = [0,1080,480];
$vpr = [-34,0,0];
$vpf = 45;

foul_line = 6;
plain_color = [1,1,1,0.8];
out_color = [1,0.75,0.75,0.8];
eat_color = [0.5,0.75,1,0.8];

// home, first, second, third, rubber
color([1,1,1]) scale([1,-1,-1]) rotate([90,0,0]) linear_extrude(1) {
    polygon([[-30,30*2+300],[30,30*2+300],[30,30+300],[0,300],[-30,30+300]]);
    polygon([[552-36*2,852],[552-36,852+36],[552,852],[552-36,852-36]]);
    polygon([[0,1404+36],[36,1404],[0,1404-36],[-36,1404]]);
    polygon([[-552+36*2,852],[-552+36,852+36],[-552,852],[-552+36,852-36]]);
    polygon([[-19,852],[19,852],[19,9+852],[-19,9+852]]);
}

// foul lines
color([1,1,1,0.5]) scale([1,-1,-1]) rotate([90,0,0]) linear_extrude(1) {
    polygon([[0,300],[-5000,300+5000],[-5000,300+5000+foul_line],[0,300+foul_line]]);
    polygon([[0,300],[5000,300+5000],[5000,300+5000+foul_line],[0,300+foul_line]]);
}

scale([0.1,0.1,-0.1]) translate([-23200,0,0]) {
    color(out_color) polyhedron([[9960,0,15590],[10480,0,18740],[9960,1100,15590],[10480,1100,18740]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9960,0,15590],[9960,0,15690],[9960,1100,15590],[9960,1100,15690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10480,0,18740],[10480,0,18840],[10480,1100,18740],[10480,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9960,0,15690],[10480,0,18840],[9960,1100,15690],[10480,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[9960,1100,15590],[9960,1100,15690],[10480,1100,18740],[10480,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10480,0,18740],[12740,0,23280],[10480,1100,18740],[12740,1100,23280]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10480,0,18740],[10480,0,18840],[10480,1100,18740],[10480,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,0,23280],[12740,0,23380],[12740,1100,23280],[12740,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10480,0,18840],[12740,0,23380],[10480,1100,18840],[12740,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10480,1100,18740],[10480,1100,18840],[12740,1100,23280],[12740,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,0,23280],[16280,0,26750],[12740,1100,23280],[16280,1100,26750]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,0,23280],[12740,0,23380],[12740,1100,23280],[12740,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,0,26750],[16280,0,26850],[16280,1100,26750],[16280,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,0,23380],[16280,0,26850],[12740,1100,23380],[16280,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,1100,23280],[12740,1100,23380],[16280,1100,26750],[16280,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,0,26750],[20610,0,28690],[16280,1100,26750],[20610,1100,28690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,0,26750],[16280,0,26850],[16280,1100,26750],[16280,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[20610,0,28690],[20610,0,28790],[20610,1100,28690],[20610,1100,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,0,26850],[20610,0,28790],[16280,1100,26850],[20610,1100,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,1100,26750],[16280,1100,26850],[20610,1100,28690],[20610,1100,28790]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[20610,0,28690],[25790,0,28690],[20610,1100,28690],[25790,1100,28690]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[20610,0,28690],[20610,0,28790],[20610,1100,28690],[20610,1150,28790]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[25790,0,28690],[25780,0,28790],[25790,1100,28690],[25780,1150,28790]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[20610,0,28790],[25780,0,28790],[20610,1150,28790],[25780,1150,28790]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[20610,1100,28690],[20610,1150,28790],[25790,1100,28690],[25780,1150,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[25790,0,28690],[30120,0,26750],[25790,1100,28690],[30120,1100,26750]], [[0,1,3,2]]);
    color(out_color) polyhedron([[25790,0,28690],[25790,0,28790],[25790,1100,28690],[25790,1100,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[30120,0,26750],[30120,0,26850],[30120,1100,26750],[30120,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[25790,0,28790],[30120,0,26850],[25790,1100,28790],[30120,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[25790,1100,28690],[25790,1100,28790],[30120,1100,26750],[30120,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[30120,0,26760],[33660,0,23280],[30120,1100,26760],[33660,1100,23280]], [[0,1,3,2]]);
    color(out_color) polyhedron([[30120,0,26760],[30120,0,26860],[30120,1100,26760],[30120,1100,26860]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33660,0,23280],[33660,0,23380],[33660,1100,23280],[33660,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[30120,0,26860],[33660,0,23380],[30120,1100,26860],[33660,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[30120,1100,26760],[30120,1100,26860],[33660,1100,23280],[33660,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33660,0,23280],[35920,0,18740],[33660,1100,23280],[35920,1100,18740]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33660,0,23280],[33660,0,23380],[33660,1100,23280],[33660,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35920,0,18740],[35920,0,18840],[35920,1100,18740],[35920,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33660,0,23380],[35920,0,18840],[33660,1100,23380],[35920,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33660,1100,23280],[33660,1100,23380],[35920,1100,18740],[35920,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35920,0,18740],[36440,0,15590],[35920,1100,18740],[36440,1100,15590]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35920,0,18740],[35920,0,18840],[35920,1100,18740],[35920,1100,18840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[36440,0,15590],[36440,0,15690],[36440,1100,15590],[36440,1100,15690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35920,0,18840],[36440,0,15690],[35920,1100,18840],[36440,1100,15690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35920,1100,18740],[35920,1100,18840],[36440,1100,15590],[36440,1100,15690]], [[0,1,3,2]]);
    color(out_color) polyhedron([[27760,0,2720],[32540,0,7350],[27760,1400,2720],[32540,1400,7350]], [[0,1,3,2]]);
    color(out_color) polyhedron([[27760,0,2720],[26710,0,3860],[27760,1400,2720],[26710,1100,3860]], [[0,1,3,2]]);
    color(out_color) polyhedron([[32540,0,7350],[31370,0,8570],[32540,1400,7350],[31370,1100,8570]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26710,0,3860],[31370,0,8570],[26710,1100,3860],[31370,1100,8570]], [[0,1,3,2]]);
    color(out_color) polyhedron([[27760,1400,2720],[26710,1100,3860],[32540,1400,7350],[31370,1100,8570]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13860,0,7350],[18640,0,2720],[13860,1400,7350],[18640,1400,2720]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13860,0,7350],[15030,0,8570],[13860,1400,7350],[15030,1100,8570]], [[0,1,3,2]]);
    color(out_color) polyhedron([[18640,0,2720],[19690,0,3860],[18640,1400,2720],[19690,1100,3860]], [[0,1,3,2]]);
    color(out_color) polyhedron([[15030,0,8570],[19690,0,3860],[15030,1100,8570],[19690,1100,3860]], [[0,1,3,2]]);
    color(out_color) polyhedron([[13860,1400,7350],[15030,1100,8570],[18640,1400,2720],[19690,1100,3860]], [[0,1,3,2]]);
    color(out_color) polyhedron([[20610,0,28700],[25790,0,28700],[20610,4400,28700],[25790,4400,28700]], [[0,1,3,2]]);
    color(out_color) polyhedron([[20610,0,28700],[20610,0,28790],[20610,4400,28700],[20610,4400,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[25790,0,28700],[25780,0,28790],[25790,4400,28700],[25780,4400,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[20610,0,28790],[25780,0,28790],[20610,4400,28790],[25780,4400,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[20610,4400,28700],[20610,4400,28790],[25790,4400,28700],[25780,4400,28790]], [[0,1,3,2]]);
    color(out_color) polyhedron([[1236,0,9090],[19600,0,1940],[1236,5,9090],[19600,5,1940]], [[0,1,3,2]]);
    color(out_color) polyhedron([[1236,0,9090],[1236,0,9100],[1236,5,9090],[1236,5,9100]], [[0,1,3,2]]);
    color(out_color) polyhedron([[19600,0,1940],[19600,0,1950],[19600,5,1940],[19600,5,1950]], [[0,1,3,2]]);
    color(out_color) polyhedron([[1236,0,9100],[19600,0,1950],[1236,5,9100],[19600,5,1950]], [[0,1,3,2]]);
    color(out_color) polyhedron([[1236,5,9090],[1236,5,9100],[19600,5,1940],[19600,5,1950]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26800,0,1940],[34040,0,9090],[26800,5,1940],[34040,5,9090]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26800,0,1940],[26800,0,1950],[26800,5,1940],[26800,5,1950]], [[0,1,3,2]]);
    color(out_color) polyhedron([[34040,0,9090],[34040,0,9100],[34040,5,9090],[34040,5,9100]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26800,0,1950],[34040,0,9100],[26800,5,1950],[34040,5,9100]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26800,5,1940],[26800,5,1950],[34040,5,9090],[34040,5,9100]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,0,26850],[16290,0,26850],[16280,1100,26850],[16290,1100,26850]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,0,26850],[8790,0,42630],[16280,1100,26850],[8790,9000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16290,0,26850],[8800,0,42630],[16290,1100,26850],[8800,9000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[8790,0,42630],[8800,0,42630],[8790,9000,42630],[8800,9000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[16280,1100,26850],[8790,9000,42630],[16290,1100,26850],[8800,9000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,0,23380],[12750,0,23380],[12740,1100,23380],[12750,1100,23380]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,0,23380],[960,0,40120],[12740,1100,23380],[960,8000,40120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12750,0,23380],[970,0,40120],[12750,1100,23380],[970,8000,40120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[960,0,40120],[970,0,40120],[960,8000,40120],[970,8000,40120]], [[0,1,3,2]]);
    color(out_color) polyhedron([[12740,1100,23380],[960,8000,40120],[12750,1100,23380],[970,8000,40120]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
}

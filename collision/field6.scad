$fs = 120;

$vpt = [0,1080,480];
$vpr = [-34,0,0];
$vpf = 45;

foul_line = 6;
plain_color = [1,1,1,0.8];
out_color = [1,0.75,0.75,0.8];
eat_color = [0.5,0.75,1,0.8];

// home, first, second, third, rubber
color([1,1,1]) scale([1,-1,-1]) rotate([90,0,0]) linear_extrude(1) {
    polygon([[-30,30*2+300],[30,30*2+300],[30,30+300],[0,300],[-30,30+300]]);
    polygon([[552-36*2,852],[552-36,852+36],[552,852],[552-36,852-36]]);
    polygon([[0,1404+36],[36,1404],[0,1404-36],[-36,1404]]);
    polygon([[-552+36*2,852],[-552+36,852+36],[-552,852],[-552+36,852-36]]);
    polygon([[-19,852],[19,852],[19,9+852],[-19,9+852]]);
}

// foul lines
color([1,1,1,0.5]) scale([1,-1,-1]) rotate([90,0,0]) linear_extrude(1) {
    polygon([[0,300],[-5000,300+5000],[-5000,300+5000+foul_line],[0,300+foul_line]]);
    polygon([[0,300],[5000,300+5000],[5000,300+5000+foul_line],[0,300+foul_line]]);
}

scale([0.1,0.1,-0.1]) translate([-23200,0,0]) {
    color(out_color) polyhedron([[7490,0,18626],[22900,0,31940],[7490,1800,18626],[22900,1800,31940]], [[0,1,3,2]]);
    color(out_color) polyhedron([[7490,0,18626],[7490,0,18726],[7490,1800,18626],[7490,1800,18726]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,31940],[22900,0,32040],[22900,1800,31940],[22900,1800,32040]], [[0,1,3,2]]);
    color(out_color) polyhedron([[7490,0,18726],[22900,0,32040],[7490,1800,18726],[22900,1800,32040]], [[0,1,3,2]]);
    color(out_color) polyhedron([[7490,1800,18626],[7490,1800,18726],[22900,1800,31940],[22900,1800,32040]], [[0,1,3,2]]);
    color(eat_color) polyhedron([[6180,0,25840],[15320,0,33640],[6180,5,25840],[15320,5,33640]], [[0,1,3,2]]);
    color(eat_color) polyhedron([[6180,0,25840],[1180,0,30810],[6180,5,25840],[1180,5,30810]], [[0,1,3,2]]);
    color(eat_color) polyhedron([[15320,0,33640],[10320,0,38610],[15320,5,33640],[10320,5,38610]], [[0,1,3,2]]);
    color(eat_color) polyhedron([[1180,0,30810],[10320,0,38610],[1180,5,30810],[10320,5,38610]], [[0,1,3,2]]);
    color(eat_color) polyhedron([[6180,5,25840],[1180,5,30810],[15320,5,33640],[10320,5,38610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[2320,0,36390],[10460,0,42630],[2320,1800,36390],[10460,1800,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[2320,0,36390],[2320,0,36490],[2320,1800,36390],[2320,1800,36490]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10460,0,42630],[10460,0,42730],[10460,1800,42630],[10460,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[2320,0,36490],[10460,0,42730],[2320,1800,36490],[10460,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[2320,1800,36390],[2320,1800,36490],[10460,1800,42630],[10460,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10460,0,42630],[22900,0,31940],[10460,1800,42630],[22900,1800,31940]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10460,0,42630],[10460,0,42730],[10460,1800,42630],[10460,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,31940],[22900,0,32040],[22900,1800,31940],[22900,1800,32040]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10460,0,42730],[22900,0,32040],[10460,1800,42730],[22900,1800,32040]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10460,1800,42630],[10460,1800,42730],[22900,1800,31940],[22900,1800,32040]], [[0,1,3,2]]);
    color(out_color) polyhedron([[17260,0,27060],[22900,0,21620],[17260,1800,27060],[22900,1800,21620]], [[0,1,3,2]]);
    color(out_color) polyhedron([[17260,0,27060],[17360,0,27060],[17260,1800,27060],[17360,1800,27060]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21620],[23000,0,21620],[22900,1800,21620],[23000,1800,21620]], [[0,1,3,2]]);
    color(out_color) polyhedron([[17360,0,27060],[23000,0,21620],[17360,1800,27060],[23000,1800,21620]], [[0,1,3,2]]);
    color(out_color) polyhedron([[17260,1800,27060],[17360,1800,27060],[22900,1800,21620],[23000,1800,21620]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21620],[28980,0,26610],[22900,1800,21620],[28980,1800,26610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21620],[22900,0,21720],[22900,1800,21620],[22900,1800,21720]], [[0,1,3,2]]);
    color(out_color) polyhedron([[28980,0,26610],[28980,0,26710],[28980,1800,26610],[28980,1800,26710]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21720],[28980,0,26710],[22900,1800,21720],[28980,1800,26710]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,1800,21620],[22900,1800,21720],[28980,1800,26610],[28980,1800,26710]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21720],[22950,0,21720],[22900,10000,21720],[22950,10000,21720]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21720],[22900,0,21820],[22900,10000,21720],[22900,10000,21820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22950,0,21720],[22950,0,21820],[22950,10000,21720],[22950,10000,21820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,21820],[22950,0,21820],[22900,10000,21820],[22950,10000,21820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,10000,21720],[22900,10000,21820],[22950,10000,21720],[22950,10000,21820]], [[0,1,3,2]]);
    color(out_color) polyhedron([[23940,0,22470],[26540,0,20480],[23940,2000,22470],[26540,2000,20480]], [[0,1,3,2]]);
    color(out_color) polyhedron([[23940,0,22470],[26540,0,24600],[23940,2000,22470],[26540,3000,24600]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26540,0,20480],[28870,0,22740],[26540,2000,20480],[28870,3000,22740]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26540,0,24600],[28870,0,22740],[26540,3000,24600],[28870,3000,22740]], [[0,1,3,2]]);
    color(out_color) polyhedron([[23940,2000,22470],[26540,3000,24600],[26540,2000,20480],[28870,3000,22740]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26540,0,24600],[28870,0,22740],[26540,3000,24600],[28870,3000,22740]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26540,0,24600],[28980,0,26610],[26540,3000,24600],[28980,2000,26610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[28870,0,22740],[30880,0,24700],[28870,3000,22740],[30880,2000,24700]], [[0,1,3,2]]);
    color(out_color) polyhedron([[28980,0,26610],[30880,0,24700],[28980,2000,26610],[30880,2000,24700]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26540,3000,24600],[28980,2000,26610],[28870,3000,22740],[30880,2000,24700]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[28980,0,26610],[40000,0,15510],[28980,1800,26610],[40000,1800,15510]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[28980,0,26610],[28980,0,26710],[28980,1800,26610],[28980,1800,26710]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[40000,0,15510],[40000,0,15610],[40000,1800,15510],[40000,1800,15610]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[28980,0,26710],[40000,0,15610],[28980,1800,26710],[40000,1800,15610]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[28980,1800,26610],[28980,1800,26710],[40000,1800,15510],[40000,1800,15610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33900,0,21650],[35690,0,24450],[33900,3000,21650],[35690,3000,24450]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33900,0,21650],[28980,0,26610],[33900,3000,21650],[28980,3000,26610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35690,0,24450],[31070,0,28840],[35690,3000,24450],[31070,3000,28840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[28980,0,26610],[31070,0,28840],[28980,3000,26610],[31070,3000,28840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33900,3000,21650],[28980,3000,26610],[35690,3000,24450],[31070,3000,28840]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35430,0,20110],[37170,0,23040],[35430,2000,20110],[37170,2000,23040]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35430,0,20110],[33900,0,21650],[35430,2000,20110],[33900,2000,21650]], [[0,1,3,2]]);
    color(out_color) polyhedron([[37170,0,23040],[35690,0,24450],[37170,2000,23040],[35690,2000,24450]], [[0,1,3,2]]);
    color(out_color) polyhedron([[33900,0,21650],[35690,0,24450],[33900,2000,21650],[35690,2000,24450]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35430,2000,20110],[33900,2000,21650],[37170,2000,23040],[35690,2000,24450]], [[0,1,3,2]]);
    color(out_color) polyhedron([[40360,0,23630],[40360,0,26440],[40360,1800,23630],[40360,1800,26440]], [[0,1,3,2]]);
    color(out_color) polyhedron([[40360,0,23630],[23630,0,42630],[40360,1800,23630],[23630,1800,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[40360,0,26440],[23630,0,42730],[40360,1800,26440],[23630,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[23630,0,42630],[23630,0,42730],[23630,1800,42630],[23630,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[40360,1800,23630],[23630,1800,42630],[40360,1800,26440],[23630,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26050,0,37380],[30940,0,42630],[26050,10000,37380],[30940,10000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26050,0,37380],[19440,0,42630],[26050,10000,37380],[19440,10000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[30940,0,42630],[23630,0,42630],[30940,10000,42630],[23630,10000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[19440,0,42630],[23630,0,42630],[19440,10000,42630],[23630,10000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[26050,10000,37380],[19440,10000,42630],[30940,10000,42630],[23630,10000,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[34020,0,32510],[34020,0,32610],[34020,1800,32510],[34020,1800,32610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[34020,0,32510],[23630,0,42630],[34020,1800,32510],[23630,1800,42630]], [[0,1,3,2]]);
    color(out_color) polyhedron([[34020,0,32610],[23630,0,42730],[34020,1800,32610],[23630,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[23630,0,42630],[23630,0,42730],[23630,1800,42630],[23630,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[34020,1800,32510],[23630,1800,42630],[34020,1800,32610],[23630,1800,42730]], [[0,1,3,2]]);
    color(out_color) polyhedron([[24460,0,1880],[35490,0,12970],[24460,1800,1880],[35490,1800,12970]], [[0,1,3,2]]);
    color(out_color) polyhedron([[24460,0,1880],[24460,0,1980],[24460,1800,1880],[24460,1800,1980]], [[0,1,3,2]]);
    color(out_color) polyhedron([[35490,0,12970],[35490,0,13070],[35490,1800,12970],[35490,1800,13070]], [[0,1,3,2]]);
    color(out_color) polyhedron([[24460,0,1980],[35490,0,13070],[24460,1800,1980],[35490,1800,13070]], [[0,1,3,2]]);
    color(out_color) polyhedron([[24460,1800,1880],[24460,1800,1980],[35490,1800,12970],[35490,1800,13070]], [[0,1,3,2]]);
    color(out_color) polyhedron([[21790,0,1880],[21800,0,1880],[21790,5,1880],[21800,5,1880]], [[0,1,3,2]]);
    color(out_color) polyhedron([[21790,0,1880],[10750,0,13310],[21790,5,1880],[10750,5,13310]], [[0,1,3,2]]);
    color(out_color) polyhedron([[21800,0,1880],[10760,0,13310],[21800,5,1880],[10760,5,13310]], [[0,1,3,2]]);
    color(out_color) polyhedron([[10750,0,13310],[10760,0,13310],[10750,5,13310],[10760,5,13310]], [[0,1,3,2]]);
    color(out_color) polyhedron([[21790,5,1880],[10750,5,13310],[21800,5,1880],[10760,5,13310]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,31940],[28980,0,26610],[22900,5,31940],[28980,5,26610]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,31940],[22900,0,31930],[22900,5,31940],[22900,5,31930]], [[0,1,3,2]]);
    color(out_color) polyhedron([[28980,0,26610],[28980,0,26620],[28980,5,26610],[28980,5,26620]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,0,31930],[28980,0,26620],[22900,5,31930],[28980,5,26620]], [[0,1,3,2]]);
    color(out_color) polyhedron([[22900,5,31940],[22900,5,31930],[28980,5,26610],[28980,5,26620]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
    color(plain_color) polyhedron([[0,0,0],[0,0,0],[0,0,0],[0,0,0]], [[0,1,3,2]]);
}

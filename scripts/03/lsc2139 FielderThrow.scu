; LSC2 3 2139 FielderThrow

parameter fielder: Entity
parameter to_x
parameter to_z
parameter smth_facing: Facing

local variable smth_kid_data_5
local variable local5
local variable local6
local variable delta_x
local variable delta_z
local variable local9
local variable adjusted_distance
local variable local11
local variable angle_y
local variable accuracy
local variable local14
local variable local15
local variable exact_distance
local variable from_x
local variable from_z
local variable hand
local variable i
local variable local21
local variable adjust

if (rCurrentPlay <= 4) {
    rBallThrownToFielder = rBaseClaims[rCurrentPlay]
} else {
    rBallThrownToFielder = rCurrentPlay
}
if (rCurrentPlay == MOUND || g_maybe_play_is_ready_to_end && rCurrentPlay == FIELDER-PITCHER) {
    accuracy = 100
} else {
    accuracy = call-script smth_about_kid_data_6_and_errors [rFieldingOrder[fielder - 37]]
}
smth_kid_data_5 = call-script smth_kid_data_5_maybe_errors_chance_with_fatigue [rFieldingOrder[fielder - 37]]
local5 = (sin 45) * smth_kid_data_5 / 100
local6 = 2 * local5 / 384000 * gGravity / 60
if (local6 < 1) {
    local6 = 1
}
local9 = local5 * local6 / 1000
from_x = gWorld[fielder][X]
from_z = gWorld[fielder][Z]
if (gKidData[rFieldingOrder[fielder - 37]][KD-HANDEDNESS] & 3 == 1) {
    hand = 1
} else {
    hand = -1
}
case smth_facing {
    of 1 {
        from_z = from_z - 12 * hand
        from_x = from_x + 10
    }
    of 2 {
        from_z = from_z - 10 * hand
        from_x = from_x + 4 * hand
        from_x = from_x + 10
        from_z = from_z + 8
    }
    of 3 {
        from_z = from_z - 8 * hand
        from_x = from_x + 8 * hand
        from_x = from_x + 8
        from_z = from_z + 8
    }
    of 4 {
        from_z = from_z - 4 * hand
        from_x = from_x + 10 * hand
        from_x = from_x + 8
        from_z = from_z + 10
    }
    of 5 {
        from_x = from_x + 12 * hand
        from_z = from_z + 10
    }
    of 6 {
        from_x = from_x + 10 * hand
        from_z = from_z + 4 * hand
        from_x = from_x - 8
        from_z = from_z + 10
    }
    of 7 {
        from_x = from_x + 8 * hand
        from_z = from_z + 8 * hand
        from_x = from_x - 8
        from_z = from_z + 8
    }
    of 8 {
        from_x = from_x + 4 * hand
        from_z = from_z + 10 * hand
        from_x = from_x - 10
        from_z = from_z + 8
    }
    of 9 {
        from_z = from_z + 12 * hand
        from_x = from_x - 10
    }
    of 10 {
        from_x = from_x - 4 * hand
        from_z = from_z + 10 * hand
        from_x = from_x - 10
        from_z = from_z - 8
    }
    of 11 {
        from_x = from_x - 8 * hand
        from_z = from_z + 8 * hand
        from_x = from_x - 10
        from_z = from_z - 8
    }
    of 12 {
        from_x = from_x - 10 * hand
        from_z = from_z + 4 * hand
        from_x = from_x - 8
        from_z = from_z - 10
    }
    of 13 {
        from_x = from_x - 12 * hand
        from_z = from_z - 10
    }
    of 14 {
        from_x = from_x - 10 * hand
        from_z = from_z - 4 * hand
        from_x = from_x + 8
        from_z = from_z - 10
    }
    of 15 {
        from_x = from_x - 8 * hand
        from_z = from_z - 8 * hand
        from_x = from_x + 8
        from_z = from_z - 8
    }
    of 16 {
        from_x = from_x - 4 * hand
        from_z = from_z - 10 * hand
        from_x = from_x + 10
        from_z = from_z - 8
    }
}
if (!rRunnersWhenBallLastThrown) {
    dim array rRunnersWhenBallLastThrown i16[0...3][0...20] swap=2
}
array-copy-range rRunnersWhenBallLastThrown gRunners 0 3 0 11 0 3 0 11
exact_distance = distance-2d from_x from_z to_x to_z
local21 = exact_distance / 36
adjust = (random2 (0 - local21) local21) * (100 - accuracy) / 100
to_x = to_x + adjust
adjust = (random2 (0 - local21) local21) * (100 - accuracy) / 100
to_z = to_z + adjust
adjusted_distance = distance-2d from_x from_z to_x to_z
delta_x = to_x - from_x
delta_z = to_z - from_z
case 1 {
    of adjusted_distance < 120 {
        local11 = 58
    }
    of adjusted_distance < 240 {
        local11 = 72
    }
    of adjusted_distance < 360 {
        local11 = 84
    }
    of adjusted_distance < 480 {
        local11 = 92
    }
    of adjusted_distance < 600 {
        local11 = 98
    }
    of adjusted_distance < 720 {
        local11 = 113
    }
    of adjusted_distance < 840 {
        local11 = 120
    }
    of adjusted_distance < 960 {
        local11 = 127
    }
    of adjusted_distance < 1080 {
        local11 = 133
    }
    of adjusted_distance < 1200 {
        local11 = 140
    }
    of adjusted_distance < 1320 {
        local11 = 146
    }
    of adjusted_distance < 1440 {
        local11 = 151
    }
    of adjusted_distance < 1560 {
        local11 = 155
    }
    of adjusted_distance < 1680 {
        local11 = 158
    }
    of adjusted_distance < 1800 {
        local11 = 160
    }
    else {
        local11 = 165
    }
}
smth_kid_data_5 = smth_kid_data_5 + 20
if (smth_kid_data_5 > 150) {
    local11 = local11 + local11 * (gKidData[rFieldingOrder[fielder - 37]][KD-ARM] - 50) / 2 / 100
}
if (local11 > smth_kid_data_5) {
    local11 = smth_kid_data_5
}
smth_kid_data_5 = smth_kid_data_5 - 20
local11 = local11 - 20
angle_y = call-script smth_vector_math_gravity_angle [gWorld[fielder][X], gWorld[fielder][Z], to_x, to_z, local11]
temp = call-script SetBallAnimation [3, -1, -1, -1]
gBallVelPhysY = (sin angle_y) * local11 / 100
local6 = 2 * gBallVelPhysY / 384000 * gGravity / 60
if (gKidData[rFieldingOrder[fielder - 37]][KD-HEIGHT] > 3) {
    ++local6
}
if (local6 < 1) {
    local6 = 1
}
if (rCurrentPlay in [F-HOME, FIRST, SECOND, THIRD]) {
    if ((random2 5 90) < (call-script smth_about_kid_data_12_with_fatigue [rFieldingOrder[fielder - 37]])) {
        for i = 0 to 3 ++ {
            if (gRunners[i][R-DEST-BASE] == rCurrentPlay || gRunners[i][R-DEST-BASE] == R-HOME && rCurrentPlay == F-HOME) {
                if ((call-script smth_about_baserunner_distance [i, to_x, to_z, 1]) < local6 * gVectorScaleDen / gVectorScaleNum) {
                    if (local11 < smth_kid_data_5) {
                        angle_y = call-script smth_vector_math_gravity_angle [gWorld[fielder][X], gWorld[fielder][Z], to_x, to_z, smth_kid_data_5]
                        gBallVelPhysY = (sin angle_y) * smth_kid_data_5 / 100
                        local6 = 2 * gBallVelPhysY / 384000 * gGravity / 60
                        if (local6 < 1) {
                            local6 = 1
                        }
                        if ((call-script smth_about_baserunner_distance [i, to_x, to_z, 1]) < local6 * gVectorScaleDen / gVectorScaleNum) {
                            angle_y = call-script smth_vector_math_gravity_angle [gWorld[fielder][X], gWorld[fielder][Z], to_x, to_z, local11]
                            gBallVelPhysY = (sin angle_y) * local11 / 100
                            local6 = 2 * gBallVelPhysY / 384000 * gGravity / 60
                            if (local6 < 1) {
                                local6 = 1
                            }
                        } else {
                            local11 = smth_kid_data_5
                            if ((random 90) > accuracy) {
                                angle_y = angle_y + (random2 1 5)
                                gBallVelPhysY = (sin angle_y) * local11 / 100
                            }
                        }
                    }
                }
                i = 49
            }
        }
    }
}
if (local9 < adjusted_distance) {
    if (!(call-script RandomBasedOnKidData [rFieldingOrder[fielder - 37], KD-COORDINATION, gDefenseControlledBy == CB-COMPUTER])) {
        if ((random 100) > 85) {
            if (random 1) {
                gBallVelPhysY = (sin (random2 45 85)) * smth_kid_data_5 / 200
            } else {
                gBallVelPhysY = (sin (random2 290 335)) * smth_kid_data_5 / 100
            }
            gBallVelPhysX = (random2 20 500) * local9 * delta_x / adjusted_distance * local6
            gBallVelPhysZ = (random2 20 500) * local9 * delta_z / adjusted_distance * local6
            run-script EnqueueComment [DIALOGUE-RUNNER-THROW-ERROR, rFieldingOrder[fielder - 37]]
            run-script SetCurrentEmote [4]
        } else {
            gBallVelPhysX = 1000 * local9 * delta_x / adjusted_distance * local6
            gBallVelPhysZ = 1000 * local9 * delta_z / adjusted_distance * local6
            angle_y = angle_y + (random2 -5 5)
            gBallVelPhysY = (sin angle_y) * local11 / 100
        }
    } else {
        gBallVelPhysX = 1000 * local9 * delta_x / adjusted_distance * local6
        gBallVelPhysZ = 1000 * local9 * delta_z / adjusted_distance * local6
        if (MOUND != rCurrentPlay) {
            if (!(call-script RandomBasedOnKidData [rFieldingOrder[fielder - 37], KD-COORDINATION, gDefenseControlledBy == CB-COMPUTER])) {
                angle_y = angle_y + (random2 -5 5)
                gBallVelPhysY = (sin angle_y) * local11 / 100
            } else if (gField in [CEMENT-GARDENS, TIN-CAN-ALLEY]) {
                angle_y = angle_y - 15
                if (angle_y < 10) {
                    angle_y = 10
                }
            }
        }
    }
    run-script AddFatigue [rFieldingOrder[fielder - 37], 32]
} else {
    gBallVelPhysX = 1000 * delta_x / local6
    gBallVelPhysZ = 1000 * delta_z / local6
    if (rCurrentPlay != MOUND) {
        if (call-script RandomBasedOnKidData [rFieldingOrder[fielder - 37], KD-COORDINATION, gDefenseControlledBy == CB-COMPUTER]) {
            angle_y = angle_y + (random2 -5 5)
            gBallVelPhysY = (sin angle_y) * local11 / 100
        }
    }
    if (smth_kid_data_5 == local11) {
        run-script AddFatigue [rFieldingOrder[fielder - 37], 33]
    } else {
        run-script AddFatigue [rFieldingOrder[fielder - 37], 34]
    }
}
case 1 {
    of local11 > 150 {
        run-script PlaySoundSynced [2006]
    }
    of local11 > 80 {
        if (random 1) {
            run-script PlaySoundSynced [2004]
        } else {
            run-script PlaySoundSynced [2005]
        }
    }
    else {
        if (random 1) {
            run-script PlaySoundSynced [2002]
        } else {
            run-script PlaySoundSynced [2003]
        }
    }
}
gBallPosPhysX = from_x * 1000 + 2 * gBallVelPhysX * gVectorScaleNum / gVectorScaleDen
gBallPosX = gBallPosPhysX / 1000
gBallPosPhysZ = from_z * 1000 + 2 * gBallVelPhysZ * gVectorScaleNum / gVectorScaleDen
gBallPosZ = gBallPosPhysZ / 1000
gBallPosPhysY = (gKidData[rFieldingOrder[fielder - 37]][KD-HEIGHT] - 1) * 15000 + 35000
gBallPosY = gBallPosPhysY / 1000
gBallVelPhysY = gBallVelPhysY - 2 * 384000 * gGravity / 60 * gVectorScaleNum / gVectorScaleDen
run-script SimulateBallStopPosition [true]
gFielderWithBall = 0
stop-script
if ((distance-2d from_x from_z gFieldingTargetX gFieldingTargetZ) < exact_distance * 5 / 4) {
    while (!(gBallPosPhysY < 36000)) {
        stop-script
    }
} else {
    do {
        stop-script
        local15 = distance-2d gWorld[BALL-SHADOW][X] gWorld[BALL-SHADOW][Z] from_x from_z
        if (local15 > exact_distance || gFielderWithBall) {
            local14 = 1
        }
    } until (local14)
}
rBallThrownToFielder = 0
stop-script
if (!gFielderWithBall) {
    if (local14) {
        run-script-xc3 WatchAwardErrorAfterThrow [fielder]
        if (random 3) {
            run-script PlayKidEmoteSound [rFieldingOrder[fielder - 37], 2]
        }
        run-script SetCurrentEmote [4]
        rCurrentPlay = NONE
    }
    run-script-xc3 SendClosestFielderToTarget [true]
}
free-script

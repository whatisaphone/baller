; SCRP 212 smth_he9_fill_cells_unused

local variable local0
local variable local1
local variable local2
local variable local3
local variable local4
local variable local5
local variable local8
local variable local9
local variable local10
local variable local11
local variable local12
local variable local13
local variable local14
local variable local15
local variable local18
local variable local19
local variable local20
local variable local21

dim array gCollideCells i32[0...15][0...15] swap=2
for local3 = 1 to gCollideNumberOfBoxes ++ {
    local0 = gCollideBoxes[local3]
    for local14 = 1 to 4 ++ {
        case local14 {
            of 1 {
                global379 = local0[0]
                global380 = local0[7]
                global377 = local0[2]
                global378 = local0[9]
            }
            of 2 {
                global379 = local0[0]
                global380 = local0[4]
                global377 = local0[2]
                global378 = local0[6]
            }
            of 3 {
                global379 = local0[7]
                global380 = local0[10]
                global377 = local0[9]
                global378 = local0[12]
            }
            of 4 {
                global379 = local0[4]
                global380 = local0[10]
                global377 = local0[6]
                global378 = local0[12]
            }
        }
        local10 = global379 / 2900
        local11 = global380 / 2900
        local12 = global377 / 2900
        local13 = global378 / 2900
        if (local10 > local11) {
            temp = local10
            local10 = local11
            local11 = temp
            temp = global379
            global379 = global380
            global380 = temp
            temp = global377
            global377 = global378
            global378 = temp
        }
        for local4 = local10 to local11 ++ {
            global375 = local4 * 2900
            if (global380 - global379 != 0 && global375 >= global379 && global375 <= global380) {
                global376 = (global378 * global375 - global377 * global375) / (global380 - global379) + global378 - (global378 * global380 - global377 * global380) / (global380 - global379)
            } else {
                global376 = global377
                if (global375 >= global380) {
                    global376 = global378
                }
            }
            local1 = global375 / 2900
            local2 = global376 / 2900
            local19 = gCollideCells[local1][local2]
            if (local19) {
                local18 = 0
                if (local19 & 2113929216) {
                    local18 = 5
                } else if (local19 & 33030144) {
                    local18 = 4
                } else if (local19 & 516096) {
                    local18 = 3
                } else if (local19 & 8064) {
                    local18 = 2
                } else {
                    local18 = 1
                }
                local21 = 0
                if (local18 <= 5) {
                    for local5 = 1 to local18 ++ {
                        local20 = call-script DecodeSlotBoxNum [local5, local19]
                        if (local20 == local3) {
                            local21 = 1
                        }
                    }
                    if (!local21) {
                        local19 = call-script EncodeSlotBoxNum [local18 + 1, local3]
                        gCollideCells[local1][local2] = local19 + gCollideCells[local1][local2]
                    }
                }
            } else {
                gCollideCells[local1][local2] = local3
            }
            if (local1 != local10) {
                --local1
                local19 = gCollideCells[local1][local2]
                if (local19) {
                    local18 = 0
                    if (local19 & 2113929216) {
                        local18 = 5
                    } else if (local19 & 33030144) {
                        local18 = 4
                    } else if (local19 & 516096) {
                        local18 = 3
                    } else if (local19 & 8064) {
                        local18 = 2
                    } else {
                        local18 = 1
                    }
                    local21 = 0
                    if (local18 <= 5) {
                        for local5 = 1 to local18 ++ {
                            local20 = call-script DecodeSlotBoxNum [local5, local19]
                            if (local20 == local3) {
                                local21 = 1
                            }
                        }
                        if (!local21) {
                            local19 = call-script EncodeSlotBoxNum [local18 + 1, local3]
                            gCollideCells[local1][local2] = local19 + gCollideCells[local1][local2]
                        }
                    }
                } else {
                    gCollideCells[local1][local2] = local3
                }
            }
        }
        if (global377 > global378) {
            local8 = local13
            local9 = local12
            temp = global379
            global379 = global380
            global380 = temp
            temp = global377
            global377 = global378
            global378 = temp
        } else {
            local15 = 1
            local8 = local12
            local9 = local13
        }
        for local4 = local8 to local9 ++ {
            global376 = local4 * 2900
            if (global377 - global378 != 0) {
                if (local15) {
                    if (global376 >= global377 && global376 <= global378) {
                        global375 = (global380 * global376 - global379 * global376) / (global378 - global377) + global380 - (global380 * global378 - global379 * global378) / (global378 - global377)
                    } else {
                        global375 = global379
                        if (global376 >= global378) {
                            global375 = global380
                        }
                    }
                } else if (global376 <= global377 && global376 >= global378) {
                    global375 = (global380 * global376 - global379 * global376) / (global378 - global377) + global380 - (global380 * global378 - global379 * global378) / (global378 - global377)
                    global376 = global376 - 2900
                } else {
                    global375 = global379
                    if (global376 <= global378) {
                        global375 = global380
                    }
                }
            } else {
                global375 = global379
            }
            local1 = global375 / 2900
            local2 = global376 / 2900
            local19 = gCollideCells[local1][local2]
            if (local19) {
                local18 = 0
                if (local19 & 2113929216) {
                    local18 = 5
                } else if (local19 & 33030144) {
                    local18 = 4
                } else if (local19 & 516096) {
                    local18 = 3
                } else if (local19 & 8064) {
                    local18 = 2
                } else {
                    local18 = 1
                }
                local21 = 0
                if (local18 <= 5) {
                    for local5 = 1 to local18 ++ {
                        local20 = call-script DecodeSlotBoxNum [local5, local19]
                        if (local20 == local3) {
                            local21 = 1
                        }
                    }
                    if (!local21) {
                        local19 = call-script EncodeSlotBoxNum [local18 + 1, local3]
                        gCollideCells[local1][local2] = local19 + gCollideCells[local1][local2]
                    }
                }
            } else {
                gCollideCells[local1][local2] = local3
            }
            if (local2 != local8) {
                --local2
                local19 = gCollideCells[local1][local2]
                if (local19) {
                    local18 = 0
                    if (local19 & 2113929216) {
                        local18 = 5
                    } else if (local19 & 33030144) {
                        local18 = 4
                    } else if (local19 & 516096) {
                        local18 = 3
                    } else if (local19 & 8064) {
                        local18 = 2
                    } else {
                        local18 = 1
                    }
                    local21 = 0
                    if (local18 <= 5) {
                        for local5 = 1 to local18 ++ {
                            local20 = call-script DecodeSlotBoxNum [local5, local19]
                            if (local20 == local3) {
                                local21 = 1
                            }
                        }
                        if (!local21) {
                            local19 = call-script EncodeSlotBoxNum [local18 + 1, local3]
                            gCollideCells[local1][local2] = local19 + gCollideCells[local1][local2]
                        }
                    }
                } else {
                    gCollideCells[local1][local2] = local3
                }
            }
        }
    }
}
run-script smth_he9_update_cells_unused []
free-script

; SCRP 214 RunCollision

local variable local0
local variable vel_y

gCollideVelX = gBallVelPhysX / 100
gCollideVelY = gBallVelPhysY / 100
gCollideVelZ = gBallVelPhysZ / 100
gCollideCurPosX = gBallPosPhysX / 100
gCollideCurPosY = gBallPosPhysY / 100
gCollideCurPosZ = gBallPosPhysZ / 100
gCollideCurPosX = gCollideCurPosX + 23200
if (gCollideCurPosX > 0 && gCollideCurPosX < 46350 && gCollideCurPosY > 0 && gCollideCurPosY < 80000 && gCollideCurPosZ > 0 && gCollideCurPosZ < 46399) {
    gCollideIntersectX = 0
    gCollideIntersectY = 0
    gCollideIntersectZ = 0
    local0 = 0
    gCollideIntersectValid = false
    global369 = 0
    vel_y = 384000 * gGravity / 60
    if (gBallPosPhysY != 0) {
        vel_y = gBallVelPhysY - 384000 * gGravity / 60 * gVectorScaleNum / gVectorScaleDen
    } else {
        vel_y = gBallVelPhysY
    }
    gCollideNextPosX = (gBallPosPhysX + gBallVelPhysX * gVectorScaleNum / gVectorScaleDen) / 100 + 23200
    gCollideNextPosY = (gBallPosPhysY + vel_y * gVectorScaleNum / gVectorScaleDen) / 100
    gCollideNextPosZ = (gBallPosPhysZ + gBallVelPhysZ * gVectorScaleNum / gVectorScaleDen) / 100
    gCollideCellX = gCollideCurPosX / 2900
    gCollideCellZ = gCollideCurPosZ / 2900
    run-script RunCollisionInner []
}
if (!gCollideIntersectValid) {
    gBallVelPhysX = gCollideVelX * 100
    gBallVelPhysY = gCollideVelY * 100
    gBallVelPhysZ = gCollideVelZ * 100
} else {
    gBallVelPhysX = gCollideVelX
    gBallVelPhysY = gCollideVelY
    gBallVelPhysZ = gCollideVelZ
    gCollideCurPosX = gCollideCurPosX - 23200
    if (gCollideCurPosY < 0) {
        gCollideCurPosY = 0
        if (gCollideCurPosX) {
            gCollideCurPosX = gCollideCurPosX + gCollideVelX * 2 / (abs gCollideVelX)
        }
        if (gCollideCurPosZ) {
            gCollideCurPosZ = gCollideCurPosZ + gCollideVelZ * 2 / (abs gCollideVelZ)
        }
    }
    gBallPosPhysX = gCollideCurPosX * 100
    gBallPosX = gBallPosPhysX / 1000
    gBallPosPhysY = gCollideCurPosY * 100
    gBallPosY = gBallPosPhysY / 1000
    gBallPosPhysZ = gCollideCurPosZ * 100
    gBallPosZ = gBallPosPhysZ / 1000
    if (!gBallIsFair) {
        if (call-script IsFoulTerritory [gBallPosX, gBallPosZ]) {
            gBallIsFoul = true
        } else {
            gBallIsFair = true
        }
    }
    if (gBallHasBounced == 0) {
        gBallHasBounced = 2
        if (gCurrentSwing == SWING-ALUMINUM-POWER) {
            stop-sound 2020
        }
    }
}
free-script

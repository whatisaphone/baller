; SCRP 216 CollideInCell

parameter cell_x
parameter cell_z

local variable local2
local variable local3
local variable local4
local variable local5
local variable local6
local variable local7
local variable local8
local variable local9
local variable collisions: [][CollisionField]
local variable max_slot
local variable slot
local variable face
local variable box_num
local variable local16
local variable smth_dist
local variable box: [][CollideBoxField]
local variable local19
local variable local20
local variable local21

g_smth_he9_flag = 0
max_slot = 0
if (gCollideCells[cell_x][cell_z] & 2113929216) {
    max_slot = 5
} else if (gCollideCells[cell_x][cell_z] & 33030144) {
    max_slot = 4
} else if (gCollideCells[cell_x][cell_z] & 516096) {
    max_slot = 3
} else if (gCollideCells[cell_x][cell_z] & 8064) {
    max_slot = 2
} else {
    max_slot = 1
}
dim array collisions i32[0...max_slot][0...5] swap=2
for slot = 1 to max_slot ++ {
    box_num = call-script DecodeSlotBoxNum [slot, gCollideCells[cell_x][cell_z]]
    smth_dist = 0
    local8 = 0
    local9 = 0
    for face = 1 to 5 ++ {
        run-script CalculateIntersect [box_num, face, cell_x, cell_z]
        if (gCollideIntersectValid) {
            local21 = call-script ConstrainIntersect [face, box_num]
            if (local21) {
                if (!local8) {
                    local2 = gCollideIntersectX
                    local3 = gCollideIntersectY
                    local4 = gCollideIntersectZ
                    local8 = distance-3d gCollideIntersectX gCollideIntersectY gCollideIntersectZ gCollideCurPosX gCollideCurPosY gCollideCurPosZ
                    local19 = face
                } else {
                    local5 = gCollideIntersectX
                    local6 = gCollideIntersectY
                    local7 = gCollideIntersectZ
                    local9 = distance-3d gCollideIntersectX gCollideIntersectY gCollideIntersectZ gCollideCurPosX gCollideCurPosY gCollideCurPosZ
                    local20 = face
                }
            } else {
                local9 = 0
            }
        }
        if (local8 || local9) {
            if (local9) {
                if (local8 < local9) {
                    gCollideIntersectX = local2
                    gCollideIntersectY = local3
                    gCollideIntersectZ = local4
                    smth_dist = local8
                    local16 = local19
                } else {
                    gCollideIntersectX = local5
                    gCollideIntersectY = local6
                    gCollideIntersectZ = local7
                    smth_dist = local9
                    local16 = local20
                }
            } else {
                gCollideIntersectX = local2
                gCollideIntersectY = local3
                gCollideIntersectZ = local4
                smth_dist = local8
                local16 = local19
            }
        } else {
            gCollideIntersectX = 0
            gCollideIntersectY = 0
            gCollideIntersectZ = 0
            gCollideIntersectValid = false
            smth_dist = 0
            local16 = 0
        }
    }
    if (smth_dist) {
        collisions[slot][COLLISION-DISTANCE] = smth_dist
        collisions[slot][COLLISION-INTERSECT-X] = gCollideIntersectX
        collisions[slot][COLLISION-INTERSECT-Y] = gCollideIntersectY
        collisions[slot][COLLISION-INTERSECT-Z] = gCollideIntersectZ
        collisions[slot][COLLISION-BOX-NUM] = box_num
        collisions[slot][COLLISION-FACE] = local16
    } else if (g_smth_he9_flag) {
        box = gCollideBoxes[box_num]
        if (box[BOX-END-PLAY] == true) {
            run-script CollideEndPlay []
        }
    }
}
if (max_slot > 1) {
    array-sort collisions 1 max_slot 0 0 -1
}
run-script HandleCollision [collisions]
free-array collisions
free-script

; SCRP 219 ConstrainIntersect

parameter face: CollideFace
parameter box_num

local variable local2
local variable local3
local variable local4
local variable local5
local variable local6
local variable local7
local variable local8
local variable local9
local variable result: bool

result = true
gCurBox = gCollideBoxes[box_num]
case 1 {
    of FACE-FRONT == face {
        if (gCurBox[BOX-P1-X] > gCollideIntersectX || gCurBox[BOX-P3-X] < gCollideIntersectX || gCurBox[BOX-P3-Y] < gCollideIntersectY) {
            if (gCurBox[BOX-P3-Y] < gCollideIntersectY && gCurBox[BOX-P1-X] <= gCollideIntersectX && gCurBox[BOX-P3-X] >= gCollideIntersectX) {
                if (gCurBox[BOX-END-PLAY] == true) {
                    run-script smth_he9_zplane [box_num, FACE-FRONT]
                    run-script CollideEndPlay []
                }
            }
            result = false
        }
    }
    of FACE-RIGHT == face {
        if (gCurBox[BOX-P4-Z] > gCollideIntersectZ && gCurBox[BOX-P3-Z] < gCollideIntersectZ) {
            if (gCurBox[BOX-P3-Y] == gCurBox[BOX-P4-Y]) {
                if (gCurBox[BOX-P3-Y] < gCollideIntersectY) {
                    if (gCurBox[BOX-END-PLAY] == true) {
                        run-script smth_he9_zplane [box_num, FACE-RIGHT]
                        run-script CollideEndPlay []
                    }
                    result = false
                }
            } else {
                local8 = gCurBox[BOX-P3-Y] - (gCurBox[BOX-P4-Y] * gCurBox[BOX-P3-Z] - gCurBox[BOX-P3-Y] * gCurBox[BOX-P3-Z]) / (gCurBox[BOX-P4-Z] - gCurBox[BOX-P3-Z])
                local9 = (gCurBox[BOX-P4-Y] * gCollideIntersectZ - gCurBox[BOX-P3-Y] * gCollideIntersectZ) / (gCurBox[BOX-P4-Z] - gCurBox[BOX-P3-Z]) + local8
                if (local9 < gCollideIntersectY) {
                    if (gCurBox[BOX-END-PLAY] == true) {
                        run-script smth_he9_zplane [box_num, FACE-RIGHT]
                        run-script CollideEndPlay []
                    }
                    result = false
                }
            }
        } else {
            result = false
        }
    }
    of FACE-LEFT == face {
        if (gCurBox[BOX-P2-Z] > gCollideIntersectZ && gCurBox[BOX-P1-Z] < gCollideIntersectZ) {
            if (gCurBox[BOX-P3-Y] == gCurBox[BOX-P4-Y]) {
                if (gCurBox[BOX-P3-Y] < gCollideIntersectY) {
                    if (gCurBox[BOX-END-PLAY] == true) {
                        run-script smth_he9_zplane [box_num, FACE-LEFT]
                        run-script CollideEndPlay []
                    }
                    result = false
                }
            } else {
                local8 = gCurBox[BOX-P3-Y] - (gCurBox[BOX-P4-Y] * gCurBox[BOX-P1-Z] - gCurBox[BOX-P3-Y] * gCurBox[BOX-P1-Z]) / (gCurBox[BOX-P2-Z] - gCurBox[BOX-P1-Z])
                local9 = (gCurBox[BOX-P4-Y] * gCollideIntersectZ - gCurBox[BOX-P3-Y] * gCollideIntersectZ) / (gCurBox[BOX-P2-Z] - gCurBox[BOX-P1-Z]) + local8
                if (local9 < gCollideIntersectY) {
                    if (gCurBox[BOX-END-PLAY] == true) {
                        run-script smth_he9_zplane [box_num, FACE-LEFT]
                        run-script CollideEndPlay []
                    }
                    result = false
                }
            }
        } else {
            result = false
        }
    }
    of FACE-BACK == face {
        if (gCurBox[BOX-P2-X] > gCollideIntersectX || gCurBox[BOX-P4-X] < gCollideIntersectX || gCurBox[BOX-P4-Y] < gCollideIntersectY) {
            if (gCurBox[BOX-P4-Y] < gCollideIntersectY && gCurBox[BOX-P2-X] <= gCollideIntersectX && gCurBox[BOX-P4-X] >= gCollideIntersectX) {
                if (gCurBox[BOX-END-PLAY] == true) {
                    run-script smth_he9_zplane [box_num, FACE-BACK]
                    run-script CollideEndPlay []
                    g_smth_he9_flag = 1
                }
            }
            result = false
        }
    }
    of FACE-TOP == face {
        local2 = atan4 gCurBox[BOX-P3-X] gCurBox[BOX-P3-Z] gCollideIntersectX gCollideIntersectZ
        local3 = atan4 gCurBox[BOX-P2-X] gCurBox[BOX-P2-Z] gCollideIntersectX gCollideIntersectZ
        local4 = atan4 gCurBox[BOX-P3-X] gCurBox[BOX-P3-Z] gCurBox[BOX-P1-X] gCurBox[BOX-P1-Z]
        local5 = atan4 gCurBox[BOX-P3-X] gCurBox[BOX-P3-Z] gCurBox[BOX-P4-X] gCurBox[BOX-P4-Z]
        local6 = atan4 gCurBox[BOX-P2-X] gCurBox[BOX-P2-Z] gCurBox[BOX-P1-X] gCurBox[BOX-P1-Z]
        local7 = atan4 gCurBox[BOX-P2-X] gCurBox[BOX-P2-Z] gCurBox[BOX-P4-X] gCurBox[BOX-P4-Z]
        if (local7 < local6) {
            if ((local3 >= local6 || local3 <= local7) && local2 >= local5 && local2 <= local4) {
                result = true
            } else {
                result = false
            }
        } else if (local4 >= local2 && local5 <= local2 && local6 <= local3 && local7 >= local3) {
            result = true
        } else {
            result = false
        }
    }
}
if (!result) {
    g_maybe_he9_play_could_end_soon = 0
    gCollideIntersectValid = false
}
return result
free-script
